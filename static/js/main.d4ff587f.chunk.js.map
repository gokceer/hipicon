{"version":3,"sources":["Login.js","Product.js","App.js","reportWebVitals.js","index.js"],"names":["Login","state","email","password","handleChange","bind","handleSubmit","e","target","name","value","this","setState","preventDefault","temp","props","submit","onSubmit","className","htmlFor","required","type","id","onChange","Component","Product","btnStyle","marginTop","background","padding","border","textTransform","fontWeight","color","productArray","map","item","src","imageURLs","alt","brand","stockCode","displayPriceText","productStoryText","deliveryDayText","style","App","isAuthanticated","responseData","productData","products","localStorage","getItem","data","fetch","method","headers","body","JSON","stringify","then","response","json","result","setItem","authToken","error","console","log","authenticated","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4ff587f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n  \r\n    this.setState({\r\n        [name]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let temp = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    }\r\n\r\n    this.props.submit(temp);\r\n\r\n    this.setState({\r\n      email: '',\r\n      password: ''\r\n    });\r\n}\r\n\r\n  render() {\r\n    return(\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-inner\">\r\n            <h2>Login</h2>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email address</label>\r\n              <input required type=\"email\" name=\"email\" id=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}/>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input required type=\"password\" name=\"password\" id=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}/>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n          </div>\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport './product.css';\r\n\r\nfunction Product(props) {\r\n    const btnStyle = {marginTop: \"75px\", background: \"#ff9f1a\", padding: \"1.2em 1.5em\", border: \"none\", textTransform: \"UPPERCASE\", \r\n    fontWeight: \"bold\", color: \"#fff\"};\r\n    return(\r\n        <div className=\"card\">\r\n                {props.productArray.map(item => (\r\n                <div className=\"container-fluid\" key={item.id}>\r\n                    <div className=\"wrapper row\">\r\n                        <div className=\"preview col-md-6\">\r\n                            <div className=\"preview-pic tab-content\">\r\n                            <div className=\"tab-pane active\" id=\"pic-1\"><img src={item.imageURLs} alt=\"product\"/></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"details col-md-6\">\r\n                            <h2 className=\"product-title\">{item.name}</h2>\r\n                            <h2 className=\"product-brand\">{item.brand}</h2>\r\n                            <p className=\"product-description stock-code\">{item.stockCode}</p>\r\n                            <h3 className=\"price\"><span>{item.displayPriceText}</span></h3>\r\n                            <p className=\"product-description\">{item.productStoryText}</p>\r\n                            <p className=\"product-description sub-description\">{item.deliveryDayText}</p>\r\n                            \r\n                            <div>\r\n                                <button style={btnStyle} type=\"button\">Add to cart</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","import React, { Component } from 'react';\nimport Login from './Login';\nimport Product from './Product';\nimport './product.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isAuthanticated: false,\n      email: '',\n      password: '',\n      responseData: '',\n      productData: []\n    }\n    this.submit = this.submit.bind(this);\n    this.products = this.products.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"authToken\") || ''){\n      this.setState({\n        isAuthanticated: true\n      });\n      this.products();\n    } \n  }\n\n  submit(data) {\n    this.setState({\n      email: data.email,\n      password: data.password\n    });\n\n    fetch('https://run.mocky.io/v3/2ba975e3-59bf-4c6e-9a2d-d51e9f722495', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({email: this.state.email, password: this.state.password})\n    }).then(response => response.json())\n      .then(result => {\n        localStorage.setItem(\"authToken\", result.data.authToken);\n        this.setState({\n          isAuthanticated: true,\n          responseData: result.data\n        });\n        this.products();\n      }, (error) => {\n        console.log(error);\n        this.setState({\n          isAuthanticated: false,\n          responseData: \"\"\n        });\n      });\n  }\n\n  products() {\n    fetch('https://run.mocky.io/v3/1fbd9867-53fd-4666-9356-7af9810f7ab5')\n    .then(response => response.json())\n    .then(result => {\n      this.setState({\n        productData: result.products\n      });\n    });\n  }\n\n  render() {\n    const authenticated = this.state.isAuthanticated;\n    console.log(this.state.productData);\n      return (\n        <div className=\"App\">\n          {authenticated ? <Product productArray = {this.state.productData}/> : <Login submit = {this.submit}/>}\n        </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}